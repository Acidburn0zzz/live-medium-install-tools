#!/bin/sh

## live-tools(7) - System Support Scripts
## Copyright (C) 2013 Richard Nelson <unixabg@gmail.com>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


set -e

# Defaults
_VERSION="7.2"

_URL="http://live.debian.net/files/stable/images/${_VERSION}/amd64/web/"

_TITLE="Debian ${_VERSION} GNOME Desktop"
_FILES="debian-live-${_VERSION}-amd64-gnome-desktop.vmlinuz debian-live-${_VERSION}-amd64-gnome-desktop.initrd.img debian-live-${_VERSION}-amd64-gnome-desktop.squashfs"

_TARGET="/dev/sda"

# Dependencies
if [ ! -e /usr/sbin/grub-install ]
then
	echo "E: /usr/sbin/grub-install - no such file"
	echo "E: On Debian based systems, grub2-common can be installed with:"
	echo "E:   apt-get install grub2-common"

	exit 1
fi

if [ ! -e /sbin/parted ]
then
	echo "E: /sbin/parted - no such file"
	echo "E: On Debian based systems, parted can be installed with:"
	echo "E:   apt-get install parted"

	exit 1
fi

if [ ! -e /usr/bin/wget ]
then
	echo "E: /usr/bin/wget - no such file"
	echo "E: On Debian based systems, wget can be installed with:"
	echo "E:   apt-get install wget"

	exit 1
fi

# Display warning
cat << EOF
######################################################
WARNING: This will erase all data on the target device
######################################################

Please enter URL to download the ${_IMAGE_FILE} image from
(default: ${_URL})
EOF

# Ask for URL
echo -n ": "
read _READ

_URL="${_READ:-${_URL}}"

# Display partitions
cat << EOF

-------------------------------------------------------------------------------
$(blkid | sort)
-------------------------------------------------------------------------------

EOF

# Ask for target device
echo -n "Please enter block device to install system to (default: ${_TARGET}): "
read _READ

_TARGET="${_READ:-${_TARGET}}"

if [ ! -b "${_TARGET}" ]
then
	echo "E: ${_TARGET} not a block device, aborting."
	exit 1
fi

cat << EOF

#########################################################
WARNING: This will erase all data on the ${_TARGET} device
#########################################################

You are about to do something potentially harmful.
To continue type in the phrase 'Yes, do as I say!'
EOF

echo -n ": "
read _CONTINUE

case "${_CONTINUE}" in
	'Yes, do as I say!')

		;;

	*)
		echo "Abort."

		exit 1
		;;
esac

# Zero fill just a bit
echo "Starting dd command for short zero fill..."
dd if=/dev/zero of=${_TARGET} bs=1024 count=1024

# Make a single partition
echo "Starting parted command to make lablel and partition..."
#parted -s -a optimal ${_TARGET} mklabel gpt -- mkpart primary ext4 1 -1
#parted -s -a optimal ${_TARGET} mklabel msdos -- mkpart primary ext4 1 3000
#parted -s -a optimal ${_TARGET} -- mkpart primary ext4 3000 -1
parted -s -a optimal ${_TARGET} mklabel msdos -- mkpart primary ext4 1 -1

# Set the block device to boot.
echo "Starting parted command to enable boot..."
parted -s ${_TARGET} --  set 1 boot on

# Make new filesystem on the new partitions.
echo "Making filesystem..."
mkfs.ext4 -L Firmware ${_TARGET}1
#mkfs.ext4 -L casper-rw ${_TARGET}2

# Mount the target filesystem
echo "Mounting file system to allow saving of iso download..."
mount ${_TARGET}1 /mnt

# Install grub2 on target device
echo "Installing grub on block device..."
grub-install --no-floppy --root-directory=/mnt ${_TARGET}

# Create the grub config file.
echo "Creating grub boot grub.cfg file..."
cat > /mnt/boot/grub/grub.cfg << EOF

set timeout=1

menuentry "${_IMAGE_TITLE}" {
	loopback loop /boot/iso/${_IMAGE_FILE}
	linux (loop)/live/vmlinuz boot=live config findiso=/boot/iso/${_IMAGE_FILE} splash noeject noprompt --
	initrd (loop)/live/initrd.img
}

menuentry "Memtest86+" {
	loopback loop /boot/iso/${_IMAGE_FILE}
	linux16 (loop)/live/memtest
}

EOF

# Create the directory to save iso file(s)
echo "Creating iso dir..."
mkdir -p /mnt/live

# Download the iso images from server
echo "Downloading iso file..."
for _FILE in _FILES
do
	wget -c http://${_URL}/${_FILE} -O /mnt/live/${_FILE}
done

# Renaming files
mv /mnt/live/debian-live-*.vmlinuz /mnt/live/vmlinuz
mv /mnt/live/debian-live-*.initrd.img /mnt/live/initrd.img
mv /mnt/live/debian-live-*.squashfs /mnt/live/filesystem.squashfs

# Sync and umount
echo "Cleanup with sync and umount..."
sync
umount /mnt

echo "Please halt your machine and boot up to your live firmware."
